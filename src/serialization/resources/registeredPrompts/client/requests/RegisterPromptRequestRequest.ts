/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Vellum from "../../../../../api";
import * as core from "../../../../../core";
import { RegisterPromptPromptInfoRequest } from "../../../../types/RegisterPromptPromptInfoRequest";
import { ProviderEnum } from "../../../../types/ProviderEnum";
import { RegisterPromptModelParametersRequest } from "../../../../types/RegisterPromptModelParametersRequest";

export const RegisterPromptRequestRequest: core.serialization.Schema<
    serializers.RegisterPromptRequestRequest.Raw,
    Vellum.RegisterPromptRequestRequest
> = core.serialization.object({
    label: core.serialization.string(),
    name: core.serialization.string(),
    prompt: RegisterPromptPromptInfoRequest,
    provider: ProviderEnum.optional(),
    model: core.serialization.string(),
    parameters: RegisterPromptModelParametersRequest,
    meta: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace RegisterPromptRequestRequest {
    interface Raw {
        label: string;
        name: string;
        prompt: RegisterPromptPromptInfoRequest.Raw;
        provider?: ProviderEnum.Raw | null;
        model: string;
        parameters: RegisterPromptModelParametersRequest.Raw;
        meta?: Record<string, unknown> | null;
    }
}
