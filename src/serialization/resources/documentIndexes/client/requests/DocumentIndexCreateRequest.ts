/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Vellum from "../../../../../api";
import * as core from "../../../../../core";

export const DocumentIndexCreateRequest: core.serialization.Schema<
    serializers.DocumentIndexCreateRequest.Raw,
    Vellum.DocumentIndexCreateRequest
> = core.serialization.object({
    label: core.serialization.string(),
    name: core.serialization.string(),
    status: core.serialization.lazy(async () => (await import("../../../..")).EntityStatus).optional(),
    environment: core.serialization.lazy(async () => (await import("../../../..")).EnvironmentEnum).optional(),
    indexingConfig: core.serialization.property(
        "indexing_config",
        core.serialization.record(core.serialization.string(), core.serialization.unknown())
    ),
    copyDocumentsFromIndexId: core.serialization.property(
        "copy_documents_from_index_id",
        core.serialization.string().optional()
    ),
});

export declare namespace DocumentIndexCreateRequest {
    interface Raw {
        label: string;
        name: string;
        status?: serializers.EntityStatus.Raw | null;
        environment?: serializers.EnvironmentEnum.Raw | null;
        indexing_config: Record<string, unknown>;
        copy_documents_from_index_id?: string | null;
    }
}
