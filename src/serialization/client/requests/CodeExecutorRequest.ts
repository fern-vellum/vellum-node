/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as Vellum from "../../../api/index";
import * as core from "../../../core";
import { CodeExecutionRuntime } from "../../types/CodeExecutionRuntime";
import { CodeExecutorInputRequest } from "../../types/CodeExecutorInputRequest";
import { CodeExecutionPackageRequest } from "../../types/CodeExecutionPackageRequest";
import { VellumVariableType } from "../../types/VellumVariableType";

export const CodeExecutorRequest: core.serialization.Schema<
    serializers.CodeExecutorRequest.Raw,
    Vellum.CodeExecutorRequest
> = core.serialization.object({
    code: core.serialization.string(),
    runtime: CodeExecutionRuntime,
    inputValues: core.serialization.property("input_values", core.serialization.list(CodeExecutorInputRequest)),
    packages: core.serialization.list(CodeExecutionPackageRequest),
    outputType: core.serialization.property("output_type", VellumVariableType),
});

export declare namespace CodeExecutorRequest {
    interface Raw {
        code: string;
        runtime: CodeExecutionRuntime.Raw;
        input_values: CodeExecutorInputRequest.Raw[];
        packages: CodeExecutionPackageRequest.Raw[];
        output_type: VellumVariableType.Raw;
    }
}
