/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { ModelVersionExecConfigParameters } from "./ModelVersionExecConfigParameters";
import { VellumVariable } from "./VellumVariable";
import { PromptTemplateBlockData } from "./PromptTemplateBlockData";

export const ModelVersionExecConfig: core.serialization.ObjectSchema<
    serializers.ModelVersionExecConfig.Raw,
    Vellum.ModelVersionExecConfig
> = core.serialization.object({
    parameters: ModelVersionExecConfigParameters,
    inputVariables: core.serialization.property("input_variables", core.serialization.list(VellumVariable)),
    promptTemplate: core.serialization.property("prompt_template", core.serialization.string().optional()),
    promptBlockData: core.serialization.property("prompt_block_data", PromptTemplateBlockData.optional()),
    promptSyntaxVersion: core.serialization.property("prompt_syntax_version", core.serialization.number().optional()),
});

export declare namespace ModelVersionExecConfig {
    interface Raw {
        parameters: ModelVersionExecConfigParameters.Raw;
        input_variables: VellumVariable.Raw[];
        prompt_template?: string | null;
        prompt_block_data?: PromptTemplateBlockData.Raw | null;
        prompt_syntax_version?: number | null;
    }
}
