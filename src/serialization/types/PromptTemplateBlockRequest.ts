/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { BlockTypeEnum } from "./BlockTypeEnum";
import { PromptTemplateBlockState } from "./PromptTemplateBlockState";

export const PromptTemplateBlockRequest: core.serialization.ObjectSchema<
    serializers.PromptTemplateBlockRequest.Raw,
    Vellum.PromptTemplateBlockRequest
> = core.serialization.object({
    id: core.serialization.string(),
    blockType: core.serialization.property("block_type", BlockTypeEnum),
    properties: core.serialization.lazyObject(async () => (await import("..")).PromptTemplateBlockPropertiesRequest),
    state: PromptTemplateBlockState.optional(),
});

export declare namespace PromptTemplateBlockRequest {
    interface Raw {
        id: string;
        block_type: BlockTypeEnum.Raw;
        properties: serializers.PromptTemplateBlockPropertiesRequest.Raw;
        state?: PromptTemplateBlockState.Raw | null;
    }
}
