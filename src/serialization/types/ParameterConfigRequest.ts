/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { IntegerParameterConfigRequest } from "./IntegerParameterConfigRequest";
import { NumberParameterConfigRequest } from "./NumberParameterConfigRequest";
import { StringParameterConfigRequest } from "./StringParameterConfigRequest";
import { BooleanParameterConfigRequest } from "./BooleanParameterConfigRequest";
import { ConstParameterConfigRequest } from "./ConstParameterConfigRequest";

export const ParameterConfigRequest: core.serialization.Schema<
    serializers.ParameterConfigRequest.Raw,
    Vellum.ParameterConfigRequest
> = core.serialization
    .union("type", {
        array: core.serialization.lazyObject(() => serializers.ArrayParameterConfigRequest),
        object: core.serialization.lazyObject(() => serializers.ObjectParameterConfigRequest),
        integer: IntegerParameterConfigRequest,
        number: NumberParameterConfigRequest,
        string: StringParameterConfigRequest,
        boolean: BooleanParameterConfigRequest,
        oneOf: core.serialization.lazyObject(() => serializers.OneOfParameterConfigRequest),
        const: ConstParameterConfigRequest,
    })
    .transform<Vellum.ParameterConfigRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ParameterConfigRequest {
    type Raw =
        | ParameterConfigRequest.Array
        | ParameterConfigRequest.Object
        | ParameterConfigRequest.Integer
        | ParameterConfigRequest.Number
        | ParameterConfigRequest.String
        | ParameterConfigRequest.Boolean
        | ParameterConfigRequest.OneOf
        | ParameterConfigRequest.Const;

    interface Array extends serializers.ArrayParameterConfigRequest.Raw {
        type: "array";
    }

    interface Object extends serializers.ObjectParameterConfigRequest.Raw {
        type: "object";
    }

    interface Integer extends IntegerParameterConfigRequest.Raw {
        type: "integer";
    }

    interface Number extends NumberParameterConfigRequest.Raw {
        type: "number";
    }

    interface String extends StringParameterConfigRequest.Raw {
        type: "string";
    }

    interface Boolean extends BooleanParameterConfigRequest.Raw {
        type: "boolean";
    }

    interface OneOf extends serializers.OneOfParameterConfigRequest.Raw {
        type: "oneOf";
    }

    interface Const extends ConstParameterConfigRequest.Raw {
        type: "const";
    }
}
