/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { TemplatingNodeStringResult } from "./TemplatingNodeStringResult";
import { TemplatingNodeNumberResult } from "./TemplatingNodeNumberResult";
import { TemplatingNodeJsonResult } from "./TemplatingNodeJsonResult";
import { TemplatingNodeChatHistoryResult } from "./TemplatingNodeChatHistoryResult";
import { TemplatingNodeSearchResultsResult } from "./TemplatingNodeSearchResultsResult";
import { TemplatingNodeErrorResult } from "./TemplatingNodeErrorResult";
import { TemplatingNodeArrayResult } from "./TemplatingNodeArrayResult";
import { TemplatingNodeFunctionCallResult } from "./TemplatingNodeFunctionCallResult";

export const TemplatingNodeResultOutput: core.serialization.Schema<
    serializers.TemplatingNodeResultOutput.Raw,
    Vellum.TemplatingNodeResultOutput
> = core.serialization
    .union("type", {
        STRING: TemplatingNodeStringResult,
        NUMBER: TemplatingNodeNumberResult,
        JSON: TemplatingNodeJsonResult,
        CHAT_HISTORY: TemplatingNodeChatHistoryResult,
        SEARCH_RESULTS: TemplatingNodeSearchResultsResult,
        ERROR: TemplatingNodeErrorResult,
        ARRAY: TemplatingNodeArrayResult,
        FUNCTION_CALL: TemplatingNodeFunctionCallResult,
    })
    .transform<Vellum.TemplatingNodeResultOutput>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TemplatingNodeResultOutput {
    type Raw =
        | TemplatingNodeResultOutput.String
        | TemplatingNodeResultOutput.Number
        | TemplatingNodeResultOutput.Json
        | TemplatingNodeResultOutput.ChatHistory
        | TemplatingNodeResultOutput.SearchResults
        | TemplatingNodeResultOutput.Error
        | TemplatingNodeResultOutput.Array
        | TemplatingNodeResultOutput.FunctionCall;

    interface String extends TemplatingNodeStringResult.Raw {
        type: "STRING";
    }

    interface Number extends TemplatingNodeNumberResult.Raw {
        type: "NUMBER";
    }

    interface Json extends TemplatingNodeJsonResult.Raw {
        type: "JSON";
    }

    interface ChatHistory extends TemplatingNodeChatHistoryResult.Raw {
        type: "CHAT_HISTORY";
    }

    interface SearchResults extends TemplatingNodeSearchResultsResult.Raw {
        type: "SEARCH_RESULTS";
    }

    interface Error extends TemplatingNodeErrorResult.Raw {
        type: "ERROR";
    }

    interface Array extends TemplatingNodeArrayResult.Raw {
        type: "ARRAY";
    }

    interface FunctionCall extends TemplatingNodeFunctionCallResult.Raw {
        type: "FUNCTION_CALL";
    }
}
