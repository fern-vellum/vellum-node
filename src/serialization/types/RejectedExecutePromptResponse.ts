/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { PromptExecutionMeta } from "./PromptExecutionMeta";
import { VellumError } from "./VellumError";

export const RejectedExecutePromptResponse: core.serialization.ObjectSchema<
    serializers.RejectedExecutePromptResponse.Raw,
    Vellum.RejectedExecutePromptResponse
> = core.serialization.object({
    meta: PromptExecutionMeta.optional(),
    raw: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    executionId: core.serialization.property("execution_id", core.serialization.string()),
    error: VellumError,
});

export declare namespace RejectedExecutePromptResponse {
    interface Raw {
        meta?: PromptExecutionMeta.Raw | null;
        raw?: Record<string, unknown> | null;
        execution_id: string;
        error: VellumError.Raw;
    }
}
