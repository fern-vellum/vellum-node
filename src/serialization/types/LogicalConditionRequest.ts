/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { LogicalOperator } from "./LogicalOperator";

export const LogicalConditionRequest: core.serialization.ObjectSchema<
    serializers.LogicalConditionRequest.Raw,
    Vellum.LogicalConditionRequest
> = core.serialization.object({
    type: core.serialization.stringLiteral("LOGICAL_CONDITION"),
    lhsVariableId: core.serialization.property("lhs_variable_id", core.serialization.string()),
    operator: LogicalOperator,
    rhsVariableId: core.serialization.property("rhs_variable_id", core.serialization.string()),
});

export declare namespace LogicalConditionRequest {
    interface Raw {
        type: "LOGICAL_CONDITION";
        lhs_variable_id: string;
        operator: LogicalOperator.Raw;
        rhs_variable_id: string;
    }
}
