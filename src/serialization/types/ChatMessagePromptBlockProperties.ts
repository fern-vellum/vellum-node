/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { ChatMessageRole } from "./ChatMessageRole";

export const ChatMessagePromptBlockProperties: core.serialization.ObjectSchema<
    serializers.ChatMessagePromptBlockProperties.Raw,
    Vellum.ChatMessagePromptBlockProperties
> = core.serialization.object({
    blocks: core.serialization.list(core.serialization.lazy(() => serializers.PromptBlock)),
    chatRole: core.serialization.property("chat_role", ChatMessageRole.optional()),
    chatSource: core.serialization.property("chat_source", core.serialization.string().optional()),
    chatMessageUnterminated: core.serialization.property(
        "chat_message_unterminated",
        core.serialization.boolean().optional()
    ),
});

export declare namespace ChatMessagePromptBlockProperties {
    interface Raw {
        blocks: serializers.PromptBlock.Raw[];
        chat_role?: ChatMessageRole.Raw | null;
        chat_source?: string | null;
        chat_message_unterminated?: boolean | null;
    }
}
