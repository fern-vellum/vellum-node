/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const DocumentIndexRead: core.serialization.ObjectSchema<
    serializers.DocumentIndexRead.Raw,
    Vellum.DocumentIndexRead
> = core.serialization.object({
    id: core.serialization.string(),
    created: core.serialization.date(),
    label: core.serialization.string(),
    name: core.serialization.string(),
    status: core.serialization.lazy(async () => (await import("..")).EntityStatus).optional(),
    environment: core.serialization.lazy(async () => (await import("..")).EnvironmentEnum).optional(),
    indexingConfig: core.serialization.property(
        "indexing_config",
        core.serialization.record(core.serialization.string(), core.serialization.unknown())
    ),
});

export declare namespace DocumentIndexRead {
    interface Raw {
        id: string;
        created: string;
        label: string;
        name: string;
        status?: serializers.EntityStatus.Raw | null;
        environment?: serializers.EnvironmentEnum.Raw | null;
        indexing_config: Record<string, unknown>;
    }
}
