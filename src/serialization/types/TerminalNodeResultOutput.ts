/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { TerminalNodeStringResult } from "./TerminalNodeStringResult";
import { TerminalNodeNumberResult } from "./TerminalNodeNumberResult";
import { TerminalNodeJsonResult } from "./TerminalNodeJsonResult";
import { TerminalNodeChatHistoryResult } from "./TerminalNodeChatHistoryResult";
import { TerminalNodeSearchResultsResult } from "./TerminalNodeSearchResultsResult";
import { TerminalNodeArrayResult } from "./TerminalNodeArrayResult";
import { TerminalNodeFunctionCallResult } from "./TerminalNodeFunctionCallResult";
import { TerminalNodeErrorResult } from "./TerminalNodeErrorResult";

export const TerminalNodeResultOutput: core.serialization.Schema<
    serializers.TerminalNodeResultOutput.Raw,
    Vellum.TerminalNodeResultOutput
> = core.serialization
    .union("type", {
        STRING: TerminalNodeStringResult,
        NUMBER: TerminalNodeNumberResult,
        JSON: TerminalNodeJsonResult,
        CHAT_HISTORY: TerminalNodeChatHistoryResult,
        SEARCH_RESULTS: TerminalNodeSearchResultsResult,
        ARRAY: TerminalNodeArrayResult,
        FUNCTION_CALL: TerminalNodeFunctionCallResult,
        ERROR: TerminalNodeErrorResult,
    })
    .transform<Vellum.TerminalNodeResultOutput>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TerminalNodeResultOutput {
    type Raw =
        | TerminalNodeResultOutput.String
        | TerminalNodeResultOutput.Number
        | TerminalNodeResultOutput.Json
        | TerminalNodeResultOutput.ChatHistory
        | TerminalNodeResultOutput.SearchResults
        | TerminalNodeResultOutput.Array
        | TerminalNodeResultOutput.FunctionCall
        | TerminalNodeResultOutput.Error;

    interface String extends TerminalNodeStringResult.Raw {
        type: "STRING";
    }

    interface Number extends TerminalNodeNumberResult.Raw {
        type: "NUMBER";
    }

    interface Json extends TerminalNodeJsonResult.Raw {
        type: "JSON";
    }

    interface ChatHistory extends TerminalNodeChatHistoryResult.Raw {
        type: "CHAT_HISTORY";
    }

    interface SearchResults extends TerminalNodeSearchResultsResult.Raw {
        type: "SEARCH_RESULTS";
    }

    interface Array extends TerminalNodeArrayResult.Raw {
        type: "ARRAY";
    }

    interface FunctionCall extends TerminalNodeFunctionCallResult.Raw {
        type: "FUNCTION_CALL";
    }

    interface Error extends TerminalNodeErrorResult.Raw {
        type: "ERROR";
    }
}
