/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { TestSuiteTestCaseCreateBulkOperationRequest } from "./TestSuiteTestCaseCreateBulkOperationRequest";
import { TestSuiteTestCaseReplaceBulkOperationRequest } from "./TestSuiteTestCaseReplaceBulkOperationRequest";
import { TestSuiteTestCaseDeleteBulkOperationRequest } from "./TestSuiteTestCaseDeleteBulkOperationRequest";

export const TestSuiteTestCaseBulkOperationRequest: core.serialization.Schema<
    serializers.TestSuiteTestCaseBulkOperationRequest.Raw,
    Vellum.TestSuiteTestCaseBulkOperationRequest
> = core.serialization
    .union("type", {
        CREATE: TestSuiteTestCaseCreateBulkOperationRequest,
        REPLACE: TestSuiteTestCaseReplaceBulkOperationRequest,
        DELETE: TestSuiteTestCaseDeleteBulkOperationRequest,
    })
    .transform<Vellum.TestSuiteTestCaseBulkOperationRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TestSuiteTestCaseBulkOperationRequest {
    type Raw =
        | TestSuiteTestCaseBulkOperationRequest.Create
        | TestSuiteTestCaseBulkOperationRequest.Replace
        | TestSuiteTestCaseBulkOperationRequest.Delete;

    interface Create extends TestSuiteTestCaseCreateBulkOperationRequest.Raw {
        type: "CREATE";
    }

    interface Replace extends TestSuiteTestCaseReplaceBulkOperationRequest.Raw {
        type: "REPLACE";
    }

    interface Delete extends TestSuiteTestCaseDeleteBulkOperationRequest.Raw {
        type: "DELETE";
    }
}
