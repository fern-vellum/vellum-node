/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { ScenarioInputStringVariableValue } from "./ScenarioInputStringVariableValue";
import { ScenarioInputChatHistoryVariableValue } from "./ScenarioInputChatHistoryVariableValue";

export const ScenarioInput: core.serialization.Schema<serializers.ScenarioInput.Raw, Vellum.ScenarioInput> =
    core.serialization
        .union("type", {
            STRING: ScenarioInputStringVariableValue,
            CHAT_HISTORY: ScenarioInputChatHistoryVariableValue,
        })
        .transform<Vellum.ScenarioInput>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace ScenarioInput {
    type Raw = ScenarioInput.String | ScenarioInput.ChatHistory;

    interface String extends ScenarioInputStringVariableValue.Raw {
        type: "STRING";
    }

    interface ChatHistory extends ScenarioInputChatHistoryVariableValue.Raw {
        type: "CHAT_HISTORY";
    }
}
