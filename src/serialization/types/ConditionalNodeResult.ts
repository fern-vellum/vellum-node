/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { ConditionalNodeResultData } from "./ConditionalNodeResultData";

export const ConditionalNodeResult: core.serialization.ObjectSchema<
    serializers.ConditionalNodeResult.Raw,
    Vellum.ConditionalNodeResult
> = core.serialization.object({
    type: core.serialization.stringLiteral("CONDITIONAL"),
    data: ConditionalNodeResultData,
});

export declare namespace ConditionalNodeResult {
    interface Raw {
        type: "CONDITIONAL";
        data: ConditionalNodeResultData.Raw;
    }
}
