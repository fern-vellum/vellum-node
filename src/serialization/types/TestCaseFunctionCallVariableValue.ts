/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { FunctionCall } from "./FunctionCall";

export const TestCaseFunctionCallVariableValue: core.serialization.ObjectSchema<
    serializers.TestCaseFunctionCallVariableValue.Raw,
    Vellum.TestCaseFunctionCallVariableValue
> = core.serialization.object({
    variableId: core.serialization.property("variable_id", core.serialization.string()),
    name: core.serialization.string(),
    value: FunctionCall.optional(),
});

export declare namespace TestCaseFunctionCallVariableValue {
    interface Raw {
        variable_id: string;
        name: string;
        value?: FunctionCall.Raw | null;
    }
}
