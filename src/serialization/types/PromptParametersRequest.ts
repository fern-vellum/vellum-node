/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";

export const PromptParametersRequest: core.serialization.ObjectSchema<
    serializers.PromptParametersRequest.Raw,
    Vellum.PromptParametersRequest
> = core.serialization.object({
    stop: core.serialization.list(core.serialization.string()).optional(),
    temperature: core.serialization.number().optional(),
    maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
    topP: core.serialization.property("top_p", core.serialization.number().optional()),
    topK: core.serialization.property("top_k", core.serialization.number().optional()),
    frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
    presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
    logitBias: core.serialization.property(
        "logit_bias",
        core.serialization.record(core.serialization.string(), core.serialization.number().optional()).optional()
    ),
    customParameters: core.serialization.property(
        "custom_parameters",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace PromptParametersRequest {
    interface Raw {
        stop?: string[] | null;
        temperature?: number | null;
        max_tokens?: number | null;
        top_p?: number | null;
        top_k?: number | null;
        frequency_penalty?: number | null;
        presence_penalty?: number | null;
        logit_bias?: Record<string, number | null | undefined> | null;
        custom_parameters?: Record<string, unknown> | null;
    }
}
