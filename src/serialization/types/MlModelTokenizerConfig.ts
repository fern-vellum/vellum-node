/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { HuggingFaceTokenizerConfig } from "./HuggingFaceTokenizerConfig";
import { TikTokenTokenizerConfig } from "./TikTokenTokenizerConfig";

export const MlModelTokenizerConfig: core.serialization.Schema<
    serializers.MlModelTokenizerConfig.Raw,
    Vellum.MlModelTokenizerConfig
> = core.serialization
    .union("type", {
        HUGGING_FACE: HuggingFaceTokenizerConfig,
        TIKTOKEN: TikTokenTokenizerConfig,
    })
    .transform<Vellum.MlModelTokenizerConfig>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace MlModelTokenizerConfig {
    type Raw = MlModelTokenizerConfig.HuggingFace | MlModelTokenizerConfig.Tiktoken;

    interface HuggingFace extends HuggingFaceTokenizerConfig.Raw {
        type: "HUGGING_FACE";
    }

    interface Tiktoken extends TikTokenTokenizerConfig.Raw {
        type: "TIKTOKEN";
    }
}
