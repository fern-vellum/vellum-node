/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { LogicalOperator } from "./LogicalOperator";

export const VellumValueLogicalConditionRequest: core.serialization.ObjectSchema<
    serializers.VellumValueLogicalConditionRequest.Raw,
    Vellum.VellumValueLogicalConditionRequest
> = core.serialization.object({
    type: core.serialization.stringLiteral("LOGICAL_CONDITION"),
    lhsVariable: core.serialization.property(
        "lhs_variable",
        core.serialization.lazy(() => serializers.VellumValueRequest)
    ),
    operator: LogicalOperator,
    rhsVariable: core.serialization.property(
        "rhs_variable",
        core.serialization.lazy(() => serializers.VellumValueRequest)
    ),
});

export declare namespace VellumValueLogicalConditionRequest {
    interface Raw {
        type: "LOGICAL_CONDITION";
        lhs_variable: serializers.VellumValueRequest.Raw;
        operator: LogicalOperator.Raw;
        rhs_variable: serializers.VellumValueRequest.Raw;
    }
}
