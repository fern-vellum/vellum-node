/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const TestSuiteRunExecution: core.serialization.ObjectSchema<
    serializers.TestSuiteRunExecution.Raw,
    Vellum.TestSuiteRunExecution
> = core.serialization.object({
    id: core.serialization.string(),
    testCaseId: core.serialization.property("test_case_id", core.serialization.string()),
    outputs: core.serialization.list(
        core.serialization.lazy(async () => (await import("..")).TestSuiteRunExecutionOutput)
    ),
    metricResults: core.serialization.property(
        "metric_results",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("..")).TestSuiteRunExecutionMetricResult)
        )
    ),
});

export declare namespace TestSuiteRunExecution {
    interface Raw {
        id: string;
        test_case_id: string;
        outputs: serializers.TestSuiteRunExecutionOutput.Raw[];
        metric_results: serializers.TestSuiteRunExecutionMetricResult.Raw[];
    }
}
