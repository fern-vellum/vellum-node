/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { PromptOutput } from "./PromptOutput";
import { AdHocFulfilledPromptExecutionMeta } from "./AdHocFulfilledPromptExecutionMeta";

export const FulfilledAdHocExecutePromptEvent: core.serialization.ObjectSchema<
    serializers.FulfilledAdHocExecutePromptEvent.Raw,
    Vellum.FulfilledAdHocExecutePromptEvent
> = core.serialization.object({
    state: core.serialization.stringLiteral("FULFILLED"),
    outputs: core.serialization.list(PromptOutput),
    executionId: core.serialization.property("execution_id", core.serialization.string()),
    meta: AdHocFulfilledPromptExecutionMeta.optional(),
});

export declare namespace FulfilledAdHocExecutePromptEvent {
    export interface Raw {
        state: "FULFILLED";
        outputs: PromptOutput.Raw[];
        execution_id: string;
        meta?: AdHocFulfilledPromptExecutionMeta.Raw | null;
    }
}
