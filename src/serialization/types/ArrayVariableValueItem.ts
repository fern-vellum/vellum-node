/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { StringVariableValue } from "./StringVariableValue";
import { NumberVariableValue } from "./NumberVariableValue";
import { JsonVariableValue } from "./JsonVariableValue";
import { ErrorVariableValue } from "./ErrorVariableValue";
import { FunctionCallVariableValue } from "./FunctionCallVariableValue";
import { ImageVariableValue } from "./ImageVariableValue";

export const ArrayVariableValueItem: core.serialization.Schema<
    serializers.ArrayVariableValueItem.Raw,
    Vellum.ArrayVariableValueItem
> = core.serialization
    .union("type", {
        STRING: StringVariableValue,
        NUMBER: NumberVariableValue,
        JSON: JsonVariableValue,
        ERROR: ErrorVariableValue,
        FUNCTION_CALL: FunctionCallVariableValue,
        IMAGE: ImageVariableValue,
    })
    .transform<Vellum.ArrayVariableValueItem>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ArrayVariableValueItem {
    type Raw =
        | ArrayVariableValueItem.String
        | ArrayVariableValueItem.Number
        | ArrayVariableValueItem.Json
        | ArrayVariableValueItem.Error
        | ArrayVariableValueItem.FunctionCall
        | ArrayVariableValueItem.Image;

    interface String extends StringVariableValue.Raw {
        type: "STRING";
    }

    interface Number extends NumberVariableValue.Raw {
        type: "NUMBER";
    }

    interface Json extends JsonVariableValue.Raw {
        type: "JSON";
    }

    interface Error extends ErrorVariableValue.Raw {
        type: "ERROR";
    }

    interface FunctionCall extends FunctionCallVariableValue.Raw {
        type: "FUNCTION_CALL";
    }

    interface Image extends ImageVariableValue.Raw {
        type: "IMAGE";
    }
}
