/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { IntegerParameterConfig } from "./IntegerParameterConfig";
import { NumberParameterConfig } from "./NumberParameterConfig";
import { StringParameterConfig } from "./StringParameterConfig";
import { BooleanParameterConfig } from "./BooleanParameterConfig";
import { ConstParameterConfig } from "./ConstParameterConfig";

export const ParameterConfig: core.serialization.Schema<serializers.ParameterConfig.Raw, Vellum.ParameterConfig> =
    core.serialization
        .union("type", {
            array: core.serialization.lazyObject(() => serializers.ArrayParameterConfig),
            object: core.serialization.lazyObject(() => serializers.ObjectParameterConfig),
            integer: IntegerParameterConfig,
            number: NumberParameterConfig,
            string: StringParameterConfig,
            boolean: BooleanParameterConfig,
            oneOf: core.serialization.lazyObject(() => serializers.OneOfParameterConfig),
            const: ConstParameterConfig,
        })
        .transform<Vellum.ParameterConfig>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace ParameterConfig {
    type Raw =
        | ParameterConfig.Array
        | ParameterConfig.Object
        | ParameterConfig.Integer
        | ParameterConfig.Number
        | ParameterConfig.String
        | ParameterConfig.Boolean
        | ParameterConfig.OneOf
        | ParameterConfig.Const;

    interface Array extends serializers.ArrayParameterConfig.Raw {
        type: "array";
    }

    interface Object extends serializers.ObjectParameterConfig.Raw {
        type: "object";
    }

    interface Integer extends IntegerParameterConfig.Raw {
        type: "integer";
    }

    interface Number extends NumberParameterConfig.Raw {
        type: "number";
    }

    interface String extends StringParameterConfig.Raw {
        type: "string";
    }

    interface Boolean extends BooleanParameterConfig.Raw {
        type: "boolean";
    }

    interface OneOf extends serializers.OneOfParameterConfig.Raw {
        type: "oneOf";
    }

    interface Const extends ConstParameterConfig.Raw {
        type: "const";
    }
}
