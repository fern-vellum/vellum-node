/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { OpenApiIntegerProperty } from "./OpenApiIntegerProperty";
import { OpenApiNumberProperty } from "./OpenApiNumberProperty";
import { OpenApiStringProperty } from "./OpenApiStringProperty";
import { OpenApiBooleanProperty } from "./OpenApiBooleanProperty";
import { OpenApiConstProperty } from "./OpenApiConstProperty";

export const OpenApiProperty: core.serialization.Schema<serializers.OpenApiProperty.Raw, Vellum.OpenApiProperty> =
    core.serialization
        .union("type", {
            array: core.serialization.lazyObject(() => serializers.OpenApiArrayProperty),
            object: core.serialization.lazyObject(() => serializers.OpenApiObjectProperty),
            integer: OpenApiIntegerProperty,
            number: OpenApiNumberProperty,
            string: OpenApiStringProperty,
            boolean: OpenApiBooleanProperty,
            oneOf: core.serialization.lazyObject(() => serializers.OpenApiOneOfProperty),
            const: OpenApiConstProperty,
        })
        .transform<Vellum.OpenApiProperty>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace OpenApiProperty {
    type Raw =
        | OpenApiProperty.Array
        | OpenApiProperty.Object
        | OpenApiProperty.Integer
        | OpenApiProperty.Number
        | OpenApiProperty.String
        | OpenApiProperty.Boolean
        | OpenApiProperty.OneOf
        | OpenApiProperty.Const;

    interface Array extends serializers.OpenApiArrayProperty.Raw {
        type: "array";
    }

    interface Object extends serializers.OpenApiObjectProperty.Raw {
        type: "object";
    }

    interface Integer extends OpenApiIntegerProperty.Raw {
        type: "integer";
    }

    interface Number extends OpenApiNumberProperty.Raw {
        type: "number";
    }

    interface String extends OpenApiStringProperty.Raw {
        type: "string";
    }

    interface Boolean extends OpenApiBooleanProperty.Raw {
        type: "boolean";
    }

    interface OneOf extends serializers.OpenApiOneOfProperty.Raw {
        type: "oneOf";
    }

    interface Const extends OpenApiConstProperty.Raw {
        type: "const";
    }
}
