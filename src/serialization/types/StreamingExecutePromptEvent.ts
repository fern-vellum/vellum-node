/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { PromptOutput } from "./PromptOutput";
import { StreamingPromptExecutionMeta } from "./StreamingPromptExecutionMeta";

export const StreamingExecutePromptEvent: core.serialization.ObjectSchema<
    serializers.StreamingExecutePromptEvent.Raw,
    Vellum.StreamingExecutePromptEvent
> = core.serialization.object({
    output: PromptOutput,
    outputIndex: core.serialization.property("output_index", core.serialization.number()),
    executionId: core.serialization.property("execution_id", core.serialization.string()),
    meta: StreamingPromptExecutionMeta.optional(),
    raw: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace StreamingExecutePromptEvent {
    interface Raw {
        output: PromptOutput.Raw;
        output_index: number;
        execution_id: string;
        meta?: StreamingPromptExecutionMeta.Raw | null;
        raw?: Record<string, unknown> | null;
    }
}
