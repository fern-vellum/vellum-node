/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const VariableValue: core.serialization.Schema<serializers.VariableValue.Raw, Vellum.VariableValue> =
    core.serialization
        .union("type", {
            STRING: core.serialization.lazyObject(async () => (await import("..")).StringVariableValue),
            NUMBER: core.serialization.lazyObject(async () => (await import("..")).NumberVariableValue),
            JSON: core.serialization.lazyObject(async () => (await import("..")).JsonVariableValue),
            CHAT_HISTORY: core.serialization.lazyObject(async () => (await import("..")).ChatHistoryVariableValue),
            SEARCH_RESULTS: core.serialization.lazyObject(async () => (await import("..")).SearchResultsVariableValue),
            ERROR: core.serialization.lazyObject(async () => (await import("..")).ErrorVariableValue),
            ARRAY: core.serialization.lazyObject(async () => (await import("..")).ArrayVariableValue),
            FUNCTION_CALL: core.serialization.lazyObject(async () => (await import("..")).FunctionCallVariableValue),
        })
        .transform<Vellum.VariableValue>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace VariableValue {
    type Raw =
        | VariableValue.String
        | VariableValue.Number
        | VariableValue.Json
        | VariableValue.ChatHistory
        | VariableValue.SearchResults
        | VariableValue.Error
        | VariableValue.Array
        | VariableValue.FunctionCall;

    interface String extends serializers.StringVariableValue.Raw {
        type: "STRING";
    }

    interface Number extends serializers.NumberVariableValue.Raw {
        type: "NUMBER";
    }

    interface Json extends serializers.JsonVariableValue.Raw {
        type: "JSON";
    }

    interface ChatHistory extends serializers.ChatHistoryVariableValue.Raw {
        type: "CHAT_HISTORY";
    }

    interface SearchResults extends serializers.SearchResultsVariableValue.Raw {
        type: "SEARCH_RESULTS";
    }

    interface Error extends serializers.ErrorVariableValue.Raw {
        type: "ERROR";
    }

    interface Array extends serializers.ArrayVariableValue.Raw {
        type: "ARRAY";
    }

    interface FunctionCall extends serializers.FunctionCallVariableValue.Raw {
        type: "FUNCTION_CALL";
    }
}
