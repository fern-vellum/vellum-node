/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { RegisterPromptPrompt } from "./RegisterPromptPrompt";
import { RegisteredPromptSandboxSnapshot } from "./RegisteredPromptSandboxSnapshot";
import { RegisteredPromptSandbox } from "./RegisteredPromptSandbox";
import { RegisteredPromptModelVersion } from "./RegisteredPromptModelVersion";
import { RegisteredPromptDeployment } from "./RegisteredPromptDeployment";

export const RegisterPromptResponse: core.serialization.ObjectSchema<
    serializers.RegisterPromptResponse.Raw,
    Vellum.RegisterPromptResponse
> = core.serialization.object({
    prompt: RegisterPromptPrompt,
    sandboxSnapshot: core.serialization.property("sandbox_snapshot", RegisteredPromptSandboxSnapshot),
    sandbox: RegisteredPromptSandbox,
    modelVersion: core.serialization.property("model_version", RegisteredPromptModelVersion),
    promptVersionId: core.serialization.property("prompt_version_id", core.serialization.string()),
    deployment: RegisteredPromptDeployment,
});

export declare namespace RegisterPromptResponse {
    interface Raw {
        prompt: RegisterPromptPrompt.Raw;
        sandbox_snapshot: RegisteredPromptSandboxSnapshot.Raw;
        sandbox: RegisteredPromptSandbox.Raw;
        model_version: RegisteredPromptModelVersion.Raw;
        prompt_version_id: string;
        deployment: RegisteredPromptDeployment.Raw;
    }
}
