/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const CodeExecutionNodeResultOutput: core.serialization.Schema<
    serializers.CodeExecutionNodeResultOutput.Raw,
    Vellum.CodeExecutionNodeResultOutput
> = core.serialization
    .union("type", {
        STRING: core.serialization.lazyObject(async () => (await import("..")).CodeExecutionNodeStringResult),
        NUMBER: core.serialization.lazyObject(async () => (await import("..")).CodeExecutionNodeNumberResult),
        JSON: core.serialization.lazyObject(async () => (await import("..")).CodeExecutionNodeJsonResult),
        CHAT_HISTORY: core.serialization.lazyObject(
            async () => (await import("..")).CodeExecutionNodeChatHistoryResult
        ),
        SEARCH_RESULTS: core.serialization.lazyObject(
            async () => (await import("..")).CodeExecutionNodeSearchResultsResult
        ),
        ERROR: core.serialization.lazyObject(async () => (await import("..")).CodeExecutionNodeErrorResult),
    })
    .transform<Vellum.CodeExecutionNodeResultOutput>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace CodeExecutionNodeResultOutput {
    type Raw =
        | CodeExecutionNodeResultOutput.String
        | CodeExecutionNodeResultOutput.Number
        | CodeExecutionNodeResultOutput.Json
        | CodeExecutionNodeResultOutput.ChatHistory
        | CodeExecutionNodeResultOutput.SearchResults
        | CodeExecutionNodeResultOutput.Error;

    interface String extends serializers.CodeExecutionNodeStringResult.Raw {
        type: "STRING";
    }

    interface Number extends serializers.CodeExecutionNodeNumberResult.Raw {
        type: "NUMBER";
    }

    interface Json extends serializers.CodeExecutionNodeJsonResult.Raw {
        type: "JSON";
    }

    interface ChatHistory extends serializers.CodeExecutionNodeChatHistoryResult.Raw {
        type: "CHAT_HISTORY";
    }

    interface SearchResults extends serializers.CodeExecutionNodeSearchResultsResult.Raw {
        type: "SEARCH_RESULTS";
    }

    interface Error extends serializers.CodeExecutionNodeErrorResult.Raw {
        type: "ERROR";
    }
}
