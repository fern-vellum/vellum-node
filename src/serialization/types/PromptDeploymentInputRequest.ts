/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { StringInputRequest } from "./StringInputRequest";
import { JsonInputRequest } from "./JsonInputRequest";
import { ChatHistoryInputRequest } from "./ChatHistoryInputRequest";

export const PromptDeploymentInputRequest: core.serialization.Schema<
    serializers.PromptDeploymentInputRequest.Raw,
    Vellum.PromptDeploymentInputRequest
> = core.serialization
    .union("type", {
        STRING: StringInputRequest,
        JSON: JsonInputRequest,
        CHAT_HISTORY: ChatHistoryInputRequest,
    })
    .transform<Vellum.PromptDeploymentInputRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PromptDeploymentInputRequest {
    type Raw =
        | PromptDeploymentInputRequest.String
        | PromptDeploymentInputRequest.Json
        | PromptDeploymentInputRequest.ChatHistory;

    interface String extends StringInputRequest.Raw {
        type: "STRING";
    }

    interface Json extends JsonInputRequest.Raw {
        type: "JSON";
    }

    interface ChatHistory extends ChatHistoryInputRequest.Raw {
        type: "CHAT_HISTORY";
    }
}
