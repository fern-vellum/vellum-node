/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { VellumError } from "./VellumError";
import { AdHocRejectedPromptExecutionMeta } from "./AdHocRejectedPromptExecutionMeta";

export const RejectedAdHocExecutePromptEvent: core.serialization.ObjectSchema<
    serializers.RejectedAdHocExecutePromptEvent.Raw,
    Vellum.RejectedAdHocExecutePromptEvent
> = core.serialization.object({
    state: core.serialization.stringLiteral("REJECTED"),
    error: VellumError,
    executionId: core.serialization.property("execution_id", core.serialization.string()),
    meta: AdHocRejectedPromptExecutionMeta.optional(),
});

export declare namespace RejectedAdHocExecutePromptEvent {
    interface Raw {
        state: "REJECTED";
        error: VellumError.Raw;
        execution_id: string;
        meta?: AdHocRejectedPromptExecutionMeta.Raw | null;
    }
}
