/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { VellumVariableType } from "./VellumVariableType";

export const JinjaPromptTemplateBlockPropertiesRequest: core.serialization.ObjectSchema<
    serializers.JinjaPromptTemplateBlockPropertiesRequest.Raw,
    Vellum.JinjaPromptTemplateBlockPropertiesRequest
> = core.serialization.object({
    template: core.serialization.string().optional(),
    templateType: core.serialization.property("template_type", VellumVariableType.optional()),
});

export declare namespace JinjaPromptTemplateBlockPropertiesRequest {
    interface Raw {
        template?: string | null;
        template_type?: VellumVariableType.Raw | null;
    }
}
