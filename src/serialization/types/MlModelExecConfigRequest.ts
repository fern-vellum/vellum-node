/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { MlModelFeature } from "./MlModelFeature";
import { MlModelTokenizerConfigRequest } from "./MlModelTokenizerConfigRequest";
import { MlModelRequestConfigRequest } from "./MlModelRequestConfigRequest";
import { MlModelResponseConfigRequest } from "./MlModelResponseConfigRequest";

export const MlModelExecConfigRequest: core.serialization.ObjectSchema<
    serializers.MlModelExecConfigRequest.Raw,
    Vellum.MlModelExecConfigRequest
> = core.serialization.object({
    modelIdentifier: core.serialization.property("model_identifier", core.serialization.string()),
    baseUrl: core.serialization.property("base_url", core.serialization.string()),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    features: core.serialization.list(MlModelFeature),
    tokenizerConfig: core.serialization.property("tokenizer_config", MlModelTokenizerConfigRequest.optional()),
    requestConfig: core.serialization.property("request_config", MlModelRequestConfigRequest.optional()),
    responseConfig: core.serialization.property("response_config", MlModelResponseConfigRequest.optional()),
});

export declare namespace MlModelExecConfigRequest {
    interface Raw {
        model_identifier: string;
        base_url: string;
        metadata: Record<string, unknown>;
        features: MlModelFeature.Raw[];
        tokenizer_config?: MlModelTokenizerConfigRequest.Raw | null;
        request_config?: MlModelRequestConfigRequest.Raw | null;
        response_config?: MlModelResponseConfigRequest.Raw | null;
    }
}
