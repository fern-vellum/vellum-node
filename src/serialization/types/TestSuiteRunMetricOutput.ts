/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";
import { TestSuiteRunMetricNumberOutput } from "./TestSuiteRunMetricNumberOutput";
import { TestSuiteRunMetricErrorOutput } from "./TestSuiteRunMetricErrorOutput";

export const TestSuiteRunMetricOutput: core.serialization.Schema<
    serializers.TestSuiteRunMetricOutput.Raw,
    Vellum.TestSuiteRunMetricOutput
> = core.serialization
    .union("type", {
        NUMBER: TestSuiteRunMetricNumberOutput,
        ERROR: TestSuiteRunMetricErrorOutput,
    })
    .transform<Vellum.TestSuiteRunMetricOutput>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TestSuiteRunMetricOutput {
    type Raw = TestSuiteRunMetricOutput.Number | TestSuiteRunMetricOutput.Error;

    interface Number extends TestSuiteRunMetricNumberOutput.Raw {
        type: "NUMBER";
    }

    interface Error extends TestSuiteRunMetricErrorOutput.Raw {
        type: "ERROR";
    }
}
