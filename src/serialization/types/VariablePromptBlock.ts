/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { PromptBlockState } from "./PromptBlockState";
import { EphemeralPromptCacheConfig } from "./EphemeralPromptCacheConfig";

export const VariablePromptBlock: core.serialization.ObjectSchema<
    serializers.VariablePromptBlock.Raw,
    Vellum.VariablePromptBlock
> = core.serialization.object({
    state: PromptBlockState.optional(),
    cacheConfig: core.serialization.property("cache_config", EphemeralPromptCacheConfig.optional()),
    blockType: core.serialization.property("block_type", core.serialization.stringLiteral("VARIABLE")),
    inputVariableId: core.serialization.property("input_variable_id", core.serialization.string()),
});

export declare namespace VariablePromptBlock {
    interface Raw {
        state?: PromptBlockState.Raw | null;
        cache_config?: EphemeralPromptCacheConfig.Raw | null;
        block_type: "VARIABLE";
        input_variable_id: string;
    }
}
