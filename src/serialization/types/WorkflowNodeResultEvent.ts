/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { InitiatedWorkflowNodeResultEvent } from "./InitiatedWorkflowNodeResultEvent";
import { StreamingWorkflowNodeResultEvent } from "./StreamingWorkflowNodeResultEvent";
import { FulfilledWorkflowNodeResultEvent } from "./FulfilledWorkflowNodeResultEvent";
import { RejectedWorkflowNodeResultEvent } from "./RejectedWorkflowNodeResultEvent";

export const WorkflowNodeResultEvent: core.serialization.Schema<
    serializers.WorkflowNodeResultEvent.Raw,
    Vellum.WorkflowNodeResultEvent
> = core.serialization.undiscriminatedUnion([
    InitiatedWorkflowNodeResultEvent,
    StreamingWorkflowNodeResultEvent,
    FulfilledWorkflowNodeResultEvent,
    RejectedWorkflowNodeResultEvent,
]);

export declare namespace WorkflowNodeResultEvent {
    export type Raw =
        | InitiatedWorkflowNodeResultEvent.Raw
        | StreamingWorkflowNodeResultEvent.Raw
        | FulfilledWorkflowNodeResultEvent.Raw
        | RejectedWorkflowNodeResultEvent.Raw;
}
