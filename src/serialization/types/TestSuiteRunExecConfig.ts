/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const TestSuiteRunExecConfig: core.serialization.Schema<
    serializers.TestSuiteRunExecConfig.Raw,
    Vellum.TestSuiteRunExecConfig
> = core.serialization
    .union("type", {
        DEPLOYMENT_RELEASE_TAG: core.serialization.lazyObject(
            async () => (await import("..")).TestSuiteRunDeploymentReleaseTagExecConfig
        ),
        WORKFLOW_RELEASE_TAG: core.serialization.lazyObject(
            async () => (await import("..")).TestSuiteRunWorkflowReleaseTagExecConfig
        ),
    })
    .transform<Vellum.TestSuiteRunExecConfig>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TestSuiteRunExecConfig {
    type Raw = TestSuiteRunExecConfig.DeploymentReleaseTag | TestSuiteRunExecConfig.WorkflowReleaseTag;

    interface DeploymentReleaseTag extends serializers.TestSuiteRunDeploymentReleaseTagExecConfig.Raw {
        type: "DEPLOYMENT_RELEASE_TAG";
    }

    interface WorkflowReleaseTag extends serializers.TestSuiteRunWorkflowReleaseTagExecConfig.Raw {
        type: "WORKFLOW_RELEASE_TAG";
    }
}
