/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { HuggingFaceTokenizerConfigRequest } from "./HuggingFaceTokenizerConfigRequest";
import { TikTokenTokenizerConfigRequest } from "./TikTokenTokenizerConfigRequest";

export const MlModelTokenizerConfigRequest: core.serialization.Schema<
    serializers.MlModelTokenizerConfigRequest.Raw,
    Vellum.MlModelTokenizerConfigRequest
> = core.serialization
    .union("type", {
        HUGGING_FACE: HuggingFaceTokenizerConfigRequest,
        TIKTOKEN: TikTokenTokenizerConfigRequest,
    })
    .transform<Vellum.MlModelTokenizerConfigRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace MlModelTokenizerConfigRequest {
    type Raw = MlModelTokenizerConfigRequest.HuggingFace | MlModelTokenizerConfigRequest.Tiktoken;

    interface HuggingFace extends HuggingFaceTokenizerConfigRequest.Raw {
        type: "HUGGING_FACE";
    }

    interface Tiktoken extends TikTokenTokenizerConfigRequest.Raw {
        type: "TIKTOKEN";
    }
}
