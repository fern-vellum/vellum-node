/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vellum from "../../api";
import * as core from "../../core";

export const WorkflowExecutionEventErrorCode: core.serialization.Schema<
    serializers.WorkflowExecutionEventErrorCode.Raw,
    Vellum.WorkflowExecutionEventErrorCode
> = core.serialization.enum_([
    "WORKFLOW_INITIALIZATION",
    "NODE_EXECUTION_COUNT_LIMIT_REACHED",
    "INTERNAL_SERVER_ERROR",
    "NODE_EXECUTION",
    "LLM_PROVIDER",
    "INVALID_TEMPLATE",
    "USER_DEFINED_ERROR",
]);

export declare namespace WorkflowExecutionEventErrorCode {
    type Raw =
        | "WORKFLOW_INITIALIZATION"
        | "NODE_EXECUTION_COUNT_LIMIT_REACHED"
        | "INTERNAL_SERVER_ERROR"
        | "NODE_EXECUTION"
        | "LLM_PROVIDER"
        | "INVALID_TEMPLATE"
        | "USER_DEFINED_ERROR";
}
