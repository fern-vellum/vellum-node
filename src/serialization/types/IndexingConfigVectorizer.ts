/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { OpenAiVectorizerTextEmbedding3Small } from "./OpenAiVectorizerTextEmbedding3Small";
import { OpenAiVectorizerTextEmbedding3Large } from "./OpenAiVectorizerTextEmbedding3Large";
import { OpenAiVectorizerTextEmbeddingAda002 } from "./OpenAiVectorizerTextEmbeddingAda002";
import { BasicVectorizerIntfloatMultilingualE5Large } from "./BasicVectorizerIntfloatMultilingualE5Large";
import { BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1 } from "./BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1";
import { BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1 } from "./BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1";
import { HkunlpInstructorXlVectorizer } from "./HkunlpInstructorXlVectorizer";

export const IndexingConfigVectorizer: core.serialization.Schema<
    serializers.IndexingConfigVectorizer.Raw,
    Vellum.IndexingConfigVectorizer
> = core.serialization
    .union(core.serialization.discriminant("modelName", "model_name"), {
        "text-embedding-3-small": OpenAiVectorizerTextEmbedding3Small,
        "text-embedding-3-large": OpenAiVectorizerTextEmbedding3Large,
        "text-embedding-ada-002": OpenAiVectorizerTextEmbeddingAda002,
        "intfloat/multilingual-e5-large": BasicVectorizerIntfloatMultilingualE5Large,
        "sentence-transformers/multi-qa-mpnet-base-cos-v1": BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1,
        "sentence-transformers/multi-qa-mpnet-base-dot-v1": BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1,
        "hkunlp/instructor-xl": HkunlpInstructorXlVectorizer,
    })
    .transform<Vellum.IndexingConfigVectorizer>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace IndexingConfigVectorizer {
    type Raw =
        | IndexingConfigVectorizer.TextEmbedding3Small
        | IndexingConfigVectorizer.TextEmbedding3Large
        | IndexingConfigVectorizer.TextEmbeddingAda002
        | IndexingConfigVectorizer.IntfloatMultilingualE5Large
        | IndexingConfigVectorizer.SentenceTransformersMultiQaMpnetBaseCosV1
        | IndexingConfigVectorizer.SentenceTransformersMultiQaMpnetBaseDotV1
        | IndexingConfigVectorizer.HkunlpInstructorXl;

    interface TextEmbedding3Small extends OpenAiVectorizerTextEmbedding3Small.Raw {
        model_name: "text-embedding-3-small";
    }

    interface TextEmbedding3Large extends OpenAiVectorizerTextEmbedding3Large.Raw {
        model_name: "text-embedding-3-large";
    }

    interface TextEmbeddingAda002 extends OpenAiVectorizerTextEmbeddingAda002.Raw {
        model_name: "text-embedding-ada-002";
    }

    interface IntfloatMultilingualE5Large extends BasicVectorizerIntfloatMultilingualE5Large.Raw {
        model_name: "intfloat/multilingual-e5-large";
    }

    interface SentenceTransformersMultiQaMpnetBaseCosV1
        extends BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1.Raw {
        model_name: "sentence-transformers/multi-qa-mpnet-base-cos-v1";
    }

    interface SentenceTransformersMultiQaMpnetBaseDotV1
        extends BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1.Raw {
        model_name: "sentence-transformers/multi-qa-mpnet-base-dot-v1";
    }

    interface HkunlpInstructorXl extends HkunlpInstructorXlVectorizer.Raw {
        model_name: "hkunlp/instructor-xl";
    }
}
